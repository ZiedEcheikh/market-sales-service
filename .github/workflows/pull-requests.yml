name: Pull Requests Checker
on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]
jobs:
  check-pr-labels:
    name: 'Check PR labels'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - uses: mheap/github-action-required-labels@v5
        with:
          mode: minimum
          count: 1
          labels: "bug,feature,enhancement,breaking,tests,documentation,internal,dependencies"
          message: "Maintainer needs to assign at least one label before merge"
  build:
    name: "Build Code"
    needs: check-pr-labels
    runs-on: ubuntu-latest
    permissions:
        contents: write
        packages: write
        checks: write
        pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build with Gradle Wrapper
        run: ./gradlew build -PskipTests -PskipQuality
  check_quality:
    name: "Check for Quality"
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      checks: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle Wrapper
        run: ./gradlew check -PskipTests

      - name: Extract pull request number
        uses: jwalton/gh-find-current-pr@v1
        id: pr

      - name: Run Quality Monitor
        uses: uhafner/quality-monitor@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pr-number: ${{ steps.pr.outputs.number }}
          config: >
            {
               "analysis":[
                  {
                     "name":"Style",
                     "id":"style",
                     "tools":[
                        {
                           "id":"checkstyle",
                           "name":"CheckStyle",
                           "pattern":"**/build/reports/checkstyle/checkstyle.xml"
                        },
                        {
                           "id":"pmd",
                           "name":"PMD",
                           "pattern":"**/build/reports/pmd/pmd.xml"
                        }
                     ]
                  },
                  {
                     "name":"Bugs",
                     "id":"bugs",
                     "icon":"bug",
                     "tools":[
                        {
                           "id":"spotbugs",
                           "name":"SpotBugs",
                           "sourcePath":"src/main/java",
                           "pattern":"**/build/reports/spotbugs/*.xml"
                        }
                     ]
                  }
               ]
            }
  unit_tests:
    name: "Perform Unit Testing"
    needs: check_quality
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      checks: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build with Gradle Wrapper
        run: ./gradlew test -PskipQuality

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: Publish JaCoCo coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: build/jacocoHtml

      - name: Extract pull request number
        uses: jwalton/gh-find-current-pr@v1
        id: pr

      - name: Run Quality Monitor
        uses: uhafner/quality-monitor@v1
        with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            pr-number: ${{ steps.pr.outputs.number }}
            config: >
              {
                 "tests":{
                    "name":"JUnit",
                    "tools":[
                       {
                          "id":"test",
                          "name":"Unittests",
                          "pattern":"**/build/test-results/test/TEST-*.xml"
                       }
                    ]
                 },
                 "coverage":[
                    {
                       "name":"JaCoCo",
                       "tools":[
                          {
                             "id":"jacoco",
                             "name":"Line Coverage",
                             "metric":"line",
                             "sourcePath":"src/main/java",
                             "pattern":"**/build/reports/jacoco/test/jacocoTestReport.xml"
                          }
                       ]
                    }
                 ]
              }