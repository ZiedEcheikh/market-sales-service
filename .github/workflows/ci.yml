name: Java CI with Gradle
on:
  push:
    branches: [ "main" ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      checks: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Extract pull request number
        uses: jwalton/gh-find-current-pr@v1
        id: pr
      - name: Run Quality Monitor
        uses: uhafner/quality-monitor@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pr-number: ${{ steps.pr.outputs.number }}
          config: >
            {
               "tests":{
                  "name":"JUnit",
                  "tools":[
                     {
                        "id":"test",
                        "name":"Unittests",
                        "pattern":"**/build/test-results/test/TEST-*.xml"
                     }
                  ]
               },
               "coverage":[
                  {
                     "name":"JaCoCo",
                     "tools":[
                        {
                           "id":"jacoco",
                           "name":"Line Coverage",
                           "metric":"line",
                           "sourcePath":"src/main/java",
                           "pattern":"**/build/reports/jacoco/test/jacocoTestReport.xml"
                        }
                     ]
                  }
               ],
               "analysis":[
                  {
                     "name":"Style",
                     "id":"style",
                     "tools":[
                        {
                           "id":"checkstyle",
                           "name":"CheckStyle",
                           "pattern":"**/build/reports/checkstyle/checkstyle.xml"
                        },
                        {
                           "id":"pmd",
                           "name":"PMD",
                           "pattern":"**/build/reports/pmd/pmd.xml"
                        }
                     ]
                  },
                  {
                     "name":"Bugs",
                     "id":"bugs",
                     "icon":"bug",
                     "tools":[
                        {
                           "id":"spotbugs",
                           "name":"SpotBugs",
                           "sourcePath":"src/main/java",
                           "pattern":"**/build/reports/spotbugs/*.xml"
                        }
                     ]
                  }
               ]
            }
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv
          badges-directory: .github/badges
          generate-coverage-badge: true
          coverage-badge-filename: jacoco.svg
      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Commit and push the badge (if it changed)
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: ':chart_with_upwards_trend: added new badge coverage'
          add: '*.svg'
      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: build/jacocoHtml
